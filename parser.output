Terminals unused in grammar

   "program"
   "bool"
   "char"
   "decl"
   "def"
   "else"
   "elsif"
   "end"
   "exit"
   "false"
   "for"
   "head"
   "if"
   "int"
   "list"
   "new"
   "nil"
   "nil?"
   "ref"
   "return"
   "skip"
   "tail"
   "true"
   T_id
   T_int_const
   T_char_const
   T_string_const
   T_and
   "and"
   T_not
   "not"
   T_or
   "or"
   '*'
   '/'
   '+'
   '-'
   '#'
   T_mod
   "mod"
   T_assign
   ":="
   T_neq
   "<>"
   T_leq
   "<="
   T_geq
   ">="


Grammar

    0 $accept: program $end

    1 program: %empty


Terminals, with rules where they appear

$end (0) 0
'#' (35)
'*' (42)
'+' (43)
'-' (45)
'/' (47)
error (256)
"program" (258)
"bool" (259)
"char" (260)
"decl" (261)
"def" (262)
"else" (263)
"elsif" (264)
"end" (265)
"exit" (266)
"false" (267)
"for" (268)
"head" (269)
"if" (270)
"int" (271)
"list" (272)
"new" (273)
"nil" (274)
"nil?" (275)
"ref" (276)
"return" (277)
"skip" (278)
"tail" (279)
"true" (280)
T_id (281)
T_int_const (282)
T_char_const (283)
T_string_const (284)
T_and (285)
"and" (286)
T_not (287)
"not" (288)
T_or (289)
"or" (290)
T_mod (291)
"mod" (292)
T_assign (293)
":=" (294)
T_neq (295)
"<>" (296)
T_leq (297)
"<=" (298)
T_geq (299)
">=" (300)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1, on right: 0


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end

    $end  shift, and go to state 2


State 2

    0 $accept: program $end .

    $default  accept
