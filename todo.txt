Arrays:
  - Semantic analysis for negative sizes (Static) on constant ints
  - LLVM
    -- Allocation (maybe PointerType with 0 size and suitable llvmtype)
    -- New array (assignment)
    -- Access array element
    -- Reference in functions and assignments


TODO:
  -- Recursive Lists
  -- Array Indexing, Recursive Arrays
  -- Short circuiting
  -- If/ElseIf/Else fix
  -- By Ref parameter passing
  -- Outer Scope parameter passing

rhs = COnstantNullPointer
ConstantInt(5)
allocainst({5, rhs})
return Pointer::get()


*-----------------LISTS-----------------*

Assign:
  RHS == NULL:
    Nu

LOG:


------------

list[list[int]] a

list[int] b
list[int] c

a := b # (c # nill)

{i64, *i64}

a -> heap address 1 -> heap address 2 where a list starts

enum lval {
  RVALUE,
  LVALUE,
  POSLVALUE
}

id
